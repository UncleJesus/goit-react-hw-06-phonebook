{"version":3,"sources":["Contacts/Contacts.module.css","App/App.module.css","redux/contacts/contactsActions.js","Contacts/Contacts.jsx","ContactForm/ContactForm.jsx","FilterContacts/FilterContacts.jsx","App/App.jsx","redux/contacts/contactsReducer.js","redux/store.js","index.js","ContactForm/ContactForm.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","contact","id","uuidv4","handleDelete","handleFilter","filter","postContacts","Contacts","this","props","toPostContacts","prevProps","prevState","contacts","localStorage","setItem","JSON","stringify","TransitionGroup","component","className","style","list","length","map","CSSTransition","timeout","classNames","item","btn","onClick","onDelete","type","Component","mapDispatchToProps","contactsActions","connect","state","items","toLowerCase","includes","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","toAddContacts","form","onSubmit","inputTitle","input","onChange","disabled","dispatch","toFilter","App","createReducer","action","getItem","parse","find","el","alert","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8e1b264.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__2pDrd\",\"list\":\"Contacts_list__1kfV7\",\"enter\":\"Contacts_enter__3oEnl\",\"enterActive\":\"Contacts_enterActive__15ROR\",\"exit\":\"Contacts_exit__12O67\",\"exitActive\":\"Contacts_exitActive__2hMR4\",\"btn\":\"Contacts_btn__2bHYj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__2nMkG\",\"appearActive\":\"App_appearActive__mp_hn\",\"enter\":\"App_enter__2a4Cx\",\"enterActive\":\"App_enterActive__3VHx-\",\"exit\":\"App_exit__1wSFZ\",\"exitActive\":\"App_exitActive__CDizN\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n// import constants from '../constants.js';\n\nconst addContacts = createAction('contact/add', (name, number) => {\n  return {\n    payload: {\n      contact: {\n        name,\n        id: uuidv4(),\n        number\n      }\n    }\n  }\n})\n\nconst handleDelete = createAction('contact/del')\n\nconst handleFilter = createAction('contact/filter', filter=> ({payload: {filter}}) )\n\nconst postContacts = createAction('contacts/post')\n\nexport default {\n  addContacts,\n  handleDelete,\n  handleFilter,\n  postContacts\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nimport contactsActions from \"../redux/contacts/contactsActions.js\";\n\nimport style from \"./Contacts.module.css\";\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.toPostContacts();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    return this.props.contacts\n      ? localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts))\n      : [];\n  }\n\n  render() {\n    return (\n      <TransitionGroup component=\"ul\" className={style.list}>\n        {this.props.contacts.length\n          ? this.props.contacts.map((contact) => (\n              <CSSTransition key={contact.id} timeout={250} classNames={style}>\n                <li className={style.item} key={contact.id}>\n                  {contact.name}: {contact.number}\n                  <button\n                    className={style.btn}\n                    onClick={() => this.props.onDelete(contact.id)}\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>{\" \"}\n                </li>\n              </CSSTransition>\n            ))\n          : []}\n      </TransitionGroup>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const filteredNames = state.contacts.items.filter((contact) =>\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\n  );\n  return {\n    contacts: filteredNames,\n  };\n};\nconst mapDispatchToProps = {\n  onDelete: contactsActions.handleDelete,\n  toPostContacts: contactsActions.postContacts,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../redux/contacts/contactsActions\";\n\nimport style from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.toAddContacts(this.state.name, this.state.number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n  render() {\n    return (\n      <form className={style.form} onSubmit={this.handleSubmit}>\n        <label className={style.inputTitle}>\n          Name\n          <input\n            className={style.input}\n            name=\"name\"\n            type=\"text\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={style.inputTitle}>\n          Number\n          <input\n            className={style.input}\n            name=\"number\"\n            type=\"phone\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n          <button\n            type=\"submit\"\n            disabled={!this.state.name.length || !this.state.number.length}\n            className={style.btn}\n          >\n            Add contact\n          </button>\n        </label>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  // const { name, number } = this.state\n  return {\n    toAddContacts: (name, number) =>\n      dispatch(contactsActions.addContacts(name, number)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport contactsActions from '../redux/contacts/contactsActions.js';\n\nconst Filter = ({ value, toFilter }) =>  (\n    <div>\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={value}\n      onChange={e => toFilter(e.target.value)} />\n    </div>\n  )\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  toFilter: PropTypes.func,\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = {\n  toFilter: contactsActions.handleFilter,\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import React from \"react\";\nimport Contacts from \"../Contacts/Contacts\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../FilterContacts/FilterContacts\";\nimport style from \"./App.module.css\";\n\nconst App = function () {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Find contacts by name</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contactsActions.js';\n\nconst toAddContact = (state, action) => {\n  const doubleName = state.find(el => el.name === action.payload.contact.name);\n    if (doubleName) {\n      alert(`${action.payload.contact.name} is already in contacts`);\n      return\n    }\n  return [...state, action.payload.contact];\n}\n\nconst toFilterContact = (state, action) => state.filter(contact => contact.id !== action.payload);\n\n\n\nconst items = createReducer([], {\n  [contactsActions.postContacts]: (state, action) =>  localStorage.getItem('contacts') ? JSON.parse(localStorage.getItem('contacts')) : state,\n  [contactsActions.addContacts]: toAddContact,\n  [contactsActions.handleDelete]: toFilterContact,\n})\n\n\nconst filter = createReducer('', {\n  [contactsActions.handleFilter]: (state, action) => action.payload.filter\n})\n\n\nexport default combineReducers ({items, filter})\n\n\n","\nimport { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contactsReducer';\n\n \nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  }\n})\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"ContactForm_inputTitle__Lobyy\",\"input\":\"ContactForm_input__6o1SA\",\"btn\":\"ContactForm_btn__2Ie94\"};"],"sourceRoot":""}